---
import Breadcrumb from '../../../components/Breadcrumb.astro';
import Base from '../../../layouts/Base.astro';

export const prerender = true

export async function getStaticPaths() {
  const allThoughts: any = await Astro.glob('../../../content/thoughts/*.md');
  const uniqueTopics = [...new Set(allThoughts.map((thought: any) => thought.frontmatter.topics).flat())];

  return uniqueTopics.map((topic) => {
    const filteredThoughts = allThoughts.filter((thought: any) => thought.frontmatter.topics.includes(topic));
    return {
        params: {topic},
        props: {thoughts: filteredThoughts}
    };
});
}

const { topic } = Astro.params;
const { thoughts } = Astro.props;

const sortedThoughts = thoughts.sort((a: any, b: any) => Date.parse(b.frontmatter.datePosted) - Date.parse(a.frontmatter.datePosted));
---

<Base pageTitle={topic}>
    <Breadcrumb oneTopicLevel title={topic}/>
    <h1 class="text-stone-800 font-bold my-3 l:my-5 text-center text-2xl md:text-3xl l:text-4xl"><span class="font-normal text-stone-600">{thoughts.length == 1 ? thoughts.length + " thought" : thoughts.length + " thoughts"} on topic:</span> {topic}</h1>
    <div>
        {
            sortedThoughts.map((t: any) => <div class="text-stone-600 flex flex-row gap-3 font-mono md:text-lg l:text-xl"><p>{new Date(t.frontmatter.datePosted).toLocaleString('default', {month: 'short', year: 'numeric', day: '2-digit'})}</p> <a class="underline text-lime-800 hover:text-lime-600 transition-all" href={`/thoughts/${t.frontmatter.slug}`}>{t.frontmatter.title}</a></div>)
        }
    </div>
</Base>