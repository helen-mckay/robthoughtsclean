---
import { getCollection } from "astro:content";

const { topOnly, hideCount, postView } = Astro.props;

const thoughts = (await getCollection('thoughts'));
const topicsDict: Record<string, number> = {};

const {topics} = Astro.props;

for (var i = 0; i < thoughts.length; i++)
{
    for (var j = 0; j < thoughts![i].data!.topics!.length; j++)
    {
        if (!topicsDict[thoughts![i].data!.topics![j]])
        {
            topicsDict[thoughts![i].data!.topics![j]] = 1;
        }
        else
        {
            topicsDict[thoughts![i].data!.topics![j]]++;
        }
    }
}

var sortableArray = Object.entries(topicsDict);
var sortedArray = sortableArray.sort(([, a], [, b]) => b - a);

if (topOnly === true)
{
    if (sortedArray.length > 5)
    {
        sortedArray.splice(5, sortedArray.length - 5);
    }
}

var sortedTopicsDict = Object.fromEntries(sortedArray);

---

<div class={postView ? "flex flex-row flex-wrap gap-3 place-items-baseline" : ""}>
    {postView && <p class="text-stone-600">Topics: </p>}
    {!postView && Object.entries(sortedTopicsDict).map(([key, val]) => <div class="flex flex-row gap-3 font-mono md:text-lg l:text-xl"><p class="text-stone-600">{!hideCount ? <>({val})</>: "" }</p><a class="underline text-lime-800 hover:text-lime-600 transition-all" href={`/thoughts/topics/${key}`}>{key}</a></div>)}
    {postView && topics.map((topic: any) => <div class="font-mono"><a class="underline text-lime-800 hover:text-lime-600 transition-all" href={`/thoughts/topics/${topic}`}>{topic}</a></div>)}
</div>